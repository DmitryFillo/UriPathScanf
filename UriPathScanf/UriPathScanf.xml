<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UriPathScanf</name>
    </assembly>
    <members>
        <member name="T:UriPathScanf.Attributes.UriMetaAttribute">
            <inheritdoc cref="T:System.Attribute" />
            <summary>
            Populates property from URI path
            </summary>
        </member>
        <member name="P:UriPathScanf.Attributes.UriMetaAttribute.BindName">
            <summary>
            Specifies name to bind
            </summary>
        </member>
        <member name="P:UriPathScanf.Attributes.UriMetaAttribute.IsQueryString">
            <summary>
            If true it's query string
            </summary>
        </member>
        <member name="M:UriPathScanf.Attributes.UriMetaAttribute.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Populates property from URI path
            </summary>
            <param name="bindName">Name in the URI path, e.g. /{bindName}/...</param>
        </member>
        <member name="M:UriPathScanf.Attributes.UriMetaAttribute.#ctor(System.String,System.Boolean)">
            <inheritdoc />
            <summary>
            Populates property from URI path
            </summary>
            <param name="bindName">Name in the URI path, e.g. /{bindName}/...</param>
            <param name="isQueryString">If true then match should be for query string</param>
        </member>
        <member name="T:UriPathScanf.Attributes.UriMetaQueryAttribute">
            <inheritdoc />
            <summary>
            Populates property from URI query string
            </summary>
        </member>
        <member name="M:UriPathScanf.Attributes.UriMetaQueryAttribute.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Populates property from URI query string
            </summary>
            <param name="bindName">Name in the URI path, e.g. /{bindName}/...</param>
        </member>
        <member name="T:UriPathScanf.IUriPathMetaModel">
            <summary>
            Marks model that it can be used to cast from <see cref="P:UriPathScanf.UriMetadata`1.Meta"/>
            </summary>
        </member>
        <member name="T:UriPathScanf.IUriPathScanf">
            <summary>
            URI parser, provides API to get metadata from URI paths
            </summary>
        </member>
        <member name="M:UriPathScanf.IUriPathScanf.ScanAll(System.String)">
            <summary>
            Gets meta by URI path
            </summary>
            <param name="uriPath">URI path (w/o domain and proto)</param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.IUriPathScanf.Scan``1(System.String)">
            <summary>
            Gets meta by URI path
            </summary>
            <typeparam name="T"></typeparam>
            <param name="uriPath"></param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.IUriPathScanf.Scan(System.String)">
            <summary>
            Gets meta by URI path
            </summary>
            <param name="uriPath"></param>
            <returns></returns>
        </member>
        <member name="T:UriPathScanf.UriMetadata`1">
            <inheritdoc />
            <summary>
            Describes URI path
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.#ctor(System.String,`0)">
            <summary>
            Creates URI metadata instance
            </summary>
            <param name="uriType">Type of URI path (user defined)</param>
            <param name="meta">URI path metadata model</param>
        </member>
        <member name="P:UriPathScanf.UriMetadata`1.UriType">
            <summary>
            Type of URI path (user defined)
            </summary>
        </member>
        <member name="P:UriPathScanf.UriMetadata`1.Meta">
            <summary>
            URI path metadata model
            </summary>
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.Equals(UriPathScanf.UriMetadata{`0})">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.op_Equality(UriPathScanf.UriMetadata{`0},UriPathScanf.UriMetadata{`0})">
            <summary>
            Equals operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.op_Inequality(UriPathScanf.UriMetadata{`0},UriPathScanf.UriMetadata{`0})">
            <summary>
            Not equals operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriMetadata`1.op_Explicit(UriPathScanf.UriMetadata)~UriPathScanf.UriMetadata{`0}">
            <summary>
            Cast to <see cref="T:UriPathScanf.UriMetadata`1"/>
            </summary>
            <param name="v"></param>
        </member>
        <member name="T:UriPathScanf.UriMetadata">
            <inheritdoc />
            <summary>
            Describes URI path
            </summary>
        </member>
        <member name="P:UriPathScanf.UriMetadata.Type">
            <summary>
            Type of <see cref="P:UriPathScanf.UriMetadata`1.Meta"/>
            </summary>
        </member>
        <member name="M:UriPathScanf.UriMetadata.TryCastToDict(System.Collections.Generic.IDictionary{System.String,System.String}@)">
            <summary>
            Converts <see cref="P:UriPathScanf.UriMetadata`1.Meta"/> to <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            If it's typed meta then null will be returned
            </summary>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriMetadata.TryCast``1(``0@)">
            <summary>
            Cast <see cref="P:UriPathScanf.UriMetadata`1.Meta"/> to type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriMetadata.#ctor(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:UriPathScanf.UriPathDescriptor">
            <inheritdoc />
            <summary>
            Describes URI path
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.#ctor(System.String,System.String,System.Type)">
            <summary>
            Creates instances of URI path descriptors
            </summary>
            <param name="type">Type of given URI path</param>
            <param name="format">Format (<see cref="M:string.Format"/> reversed)</param>
            <param name="meta">Model that will be populated from given URI paths</param>
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.#ctor(System.String,System.String)">
            <summary>
            Creates instance of URI path descriptor
            </summary>
            <param name="type">Type of given URI path</param>
            <param name="format">Format (<see cref="M:string.Format"/> reversed)</param>
        </member>
        <member name="P:UriPathScanf.UriPathDescriptor.Type">
            <summary>
            Type of descriptor (user defined)
            </summary>
        </member>
        <member name="P:UriPathScanf.UriPathDescriptor.Format">
            <summary>
            Descriptor format (<see cref="M:string.Format"/> reversed)
            </summary>
        </member>
        <member name="P:UriPathScanf.UriPathDescriptor.Meta">
            <summary>
            <see cref="T:Type"/> of model to be populated
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.Equals(UriPathScanf.UriPathDescriptor)">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.op_Equality(UriPathScanf.UriPathDescriptor,UriPathScanf.UriPathDescriptor)">
            <summary>
            Equals operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriPathDescriptor.op_Inequality(UriPathScanf.UriPathDescriptor,UriPathScanf.UriPathDescriptor)">
            <summary>
            Not equals operator
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:UriPathScanf.UriPathScanf">
            <inheritdoc />
            <summary>
            URI path parser
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.#ctor(System.Collections.Generic.IEnumerable{UriPathScanf.UriPathDescriptor})">
            <summary>
            Creates instances of <see cref="T:UriPathScanf"/>
            </summary>
            <param name="descriptors">URI paths descriptors</param>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.ScanAll(System.String)">
            <inheritdoc />
            <summary>
            Get URI path metadata
            </summary>
            <param name="uriPath">URI path</param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.Scan``1(System.String)">
            <inheritdoc />
            <summary>
            Get URI path metadata
            </summary>
            <param name="uriPath">URI path</param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.Scan(System.String)">
            <inheritdoc />
            <summary>
            Get URI path metadata
            </summary>
            <param name="uriPath">URI path</param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.FindMatch(System.String)">
            <summary>
            Finds match in descriptors
            </summary>
            <param name="uriPath">URI path</param>
            <returns></returns>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.GetQueryStringBindingName(System.String)">
            <summary>
            Gets bind name for query string
            </summary>
            <param name="qsParamName">Query string param name</param>
            <returns></returns>
        </member>
    </members>
</doc>
