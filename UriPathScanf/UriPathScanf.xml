<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UriPathScanf</name>
    </assembly>
    <members>
        <member name="T:UriPathScanf.Exceptions.ProvideUriPathAttributeException">
            <inheritdoc />
            <summary>
            Occurs when no <see cref="T:UriPathScanf.UriPathAttribute" /> defined on model
            </summary>
        </member>
        <member name="M:UriPathScanf.Exceptions.ProvideUriPathAttributeException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.Exceptions.ProvideUriPathAttributeException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:UriPathScanf.Exceptions.ProvideUriPathAttributeException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:UriPathScanf.UriPathAttribute">
            <summary>
            Marks model as fetchable from URI path
            </summary>
        </member>
        <member name="P:UriPathScanf.UriPathAttribute.Format">
            <summary>
            URI path format
            </summary>
        </member>
        <member name="P:UriPathScanf.UriPathAttribute.Names">
            <summary>
            Names of variable, should be the same as prop names in the model
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathAttribute.#ctor(System.String,System.String[])">
            <summary>
            <inheritdoc cref="T:UriPathScanf.UriPathAttribute"/>
            </summary>
            <param name="uriPathFormat">Format string, e.g. "/some/path/{}/xxx"</param>
            <param name="names">Names params in the same order as in the format string</param>
        </member>
        <member name="T:UriPathScanf.UriPathConfiguration">
            <summary>
            Factories configuration
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathConfiguration.Add``1">
            <summary>
            Add model to the configuration
            </summary>
            <typeparam name="T">Model</typeparam>
            <returns></returns>
            <exception cref="T:UriPathScanf.Exceptions.ProvideUriPathAttributeException">Occurs when no attribute with URI path format is declared on the given model</exception>
        </member>
        <member name="M:UriPathScanf.UriPathConfiguration.Add(System.String)">
            <summary>
            Add format that can be resolved as dictionary.
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:UriPathScanf.UriPathScanf">
            <summary>
            URI path scanf utility
            </summary>
        </member>
        <member name="F:UriPathScanf.UriPathScanf._uriPathConfiguration">
            <summary>
            Gets URI path configuration
            </summary>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.#ctor(UriPathScanf.UriPathConfiguration)">
            <summary>
            Create URI path scanf instance.
            </summary>
            <param name="configurationFactory">Configuration factory</param>
            <exception cref="T:System.ArgumentException">If no configuration factory provided</exception>
        </member>
        <member name="M:UriPathScanf.UriPathScanf.GetMatchChecker(System.String)">
            <summary>
            
            </summary>
            <param name="uriPath"></param>
            <returns></returns>
        </member>
    </members>
</doc>
